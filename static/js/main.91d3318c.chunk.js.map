{"version":3,"sources":["components/preview/index.js","components/message/index.js","components/notes/notesContainer.js","components/notes/notesList.js","components/notes/not.js","components/notes/noteForm.js","components/Alert/index.js","App.js","index.js"],"names":["Preview","props","className","children","Message","title","NotesContainer","NotesList","Note","noteClicked","active","onClick","NoteForm","formTitle","content","titleChanged","contentChanged","submitClicked","submitText","type","name","placeholder","value","onChange","rows","href","Alert","validationMessages","map","message","index","App","useState","notes","setNotes","setTitle","setContent","selectedNote","setSelectedNote","creating","setCreating","editing","setEditing","validationErrors","setValidationErrors","useEffect","storedNotes","localStorage","getItem","parsedNotes","JSON","parse","setItem","stringify","error","console","length","setTimeout","validate","passed","push","saveToLocalStorage","item","changeTitleHandler","event","target","changeContentHandler","saveNoteHandler","note","id","Date","updatedNotes","editNoteHandler","find","updatedNoteHandler","updatedNot","findIndex","deleteNoteHandler","notIndex","splice","noteId","noteDisplay","getPreview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91d3318c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Preview = (props) => (\r\n    <div className=\"preview-section\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default Preview","import React from \"react\";\r\n\r\nconst Message = (props) =>(\r\n    <h2 className=\"center\">{props.title}</h2>\r\n);\r\n\r\nexport default Message;","import React from \"react\";\r\n\r\nconst NotesContainer = (props) =>(\r\n    <div className=\"notes-section\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default NotesContainer;","import React from \"react\";\r\n\r\nconst NotesList = (props) => (\r\n    <ul className=\"notes-list\">\r\n        {props.children}\r\n    </ul>\r\n);\r\n\r\n\r\nexport default NotesList;","import React from \"react\";\r\n\r\nconst Note = (props) => {\r\n    const {title , noteClicked , active} = props;\r\n\r\n    return (\r\n        <li className={`note-item ${active && 'active'}`} onClick={noteClicked}>{title}</li>\r\n    );\r\n}\r\n\r\nexport default Note","import React from \"react\";\r\n\r\n\r\nconst NoteForm = (props) =>{\r\n    const {formTitle,title, content, titleChanged, contentChanged, submitClicked, submitText} = props;\r\n\r\n    return(\r\n        <div>\r\n            <h2>{formTitle}</h2>\r\n            <div>\r\n                <input \r\n                type=\"text\"\r\n                name=\"title\"\r\n                className=\"form-input md-30\"\r\n                placeholder=\"العنوان\"\r\n                value={title}\r\n                onChange={titleChanged}\r\n                />\r\n\r\n                <textarea \r\n                rows='10'\r\n                name=\"content\"\r\n                className=\"form-input\"\r\n                placeholder=\"النص\" \r\n                value={content}\r\n                onChange={contentChanged} \r\n                />\r\n                <a href=\"#\" className=\"button green\" onClick={submitClicked}>{submitText}</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteForm;","import React from \"react\";\r\n\r\nconst Alert = (props) => (\r\n    <div className=\"alert-container\">\r\n        <ul>\r\n            {props.validationMessages.map((message, index) => <li key={index}>{message}</li>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Alert;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Preview from './components/preview';\nimport Message from './components/message';\nimport NotesContainer from './components/notes/notesContainer';\nimport NotesList from './components/notes/notesList';\nimport Note from './components/notes/not';\nimport NoteForm from './components/notes/noteForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [validationErrors , setValidationErrors] = useState([]);\n\n\n  useEffect(() => {\n    try {\n      const storedNotes = localStorage.getItem('notes');\n      if (storedNotes) {\n        const parsedNotes = JSON.parse(storedNotes);\n        setNotes(parsedNotes);\n      } else {\n        localStorage.setItem('notes', JSON.stringify([]));\n      }\n    } catch (error) {\n      console.error('Error parsing notes from localStorage:', error);\n    }\n  }, []);\n\n  useEffect(()=>{    \n  if (validationErrors.length !==0){\n    setTimeout(()=>{\n      setValidationErrors([]);\n    },5000)\n  }\n} , [validationErrors])\n\n  const validate = () => {\n    const validationErrors = [];\n    let passed = true;\n    if  (!title) {\n      validationErrors.push(\"الرجاء ادخال عنوان للملاحظه\")\n      passed = false;\n    }\n\n    if (!content){\n      validationErrors.push(\"الرجاء ادخال محتوى الملاحظه\")\n      passed = false;\n    }\n    setValidationErrors ( validationErrors);\n    return passed;\n  }\n\n  // حفظ في الذاكرة المحلية\n  const saveToLocalStorage = (name, item) => {\n    localStorage.setItem(name, JSON.stringify(item));\n  };\n\n  const changeTitleHandler = event => {\n    setTitle(event.target.value);\n  };\n\n  const changeContentHandler = event => {\n    setContent(event.target.value);\n  };\n\n  const saveNoteHandler = () => {\n\n    if (!validate()) return;\n\n    const note = {\n      id: new Date(),\n      title: title,\n      content: content,\n    };\n\n    const updatedNotes = [...notes, note];\n    saveToLocalStorage('notes', updatedNotes); //هنا\n    setNotes(updatedNotes);\n    setCreating(false);\n    setSelectedNote(note.id);\n    setTitle('');\n    setContent('');\n  };\n\n  const selectNoteHandler = noteId => {\n    setSelectedNote(noteId);\n    setCreating(false);\n    setEditing(false);\n  };\n\n  const editNoteHandler = () => {\n    const note = notes.find(note => note.id === selectedNote);\n    setEditing(true);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  const updatedNoteHandler = () => {\n\n    if (!validate()) return;\n\n    const updatedNot = [...notes];\n    const noteIndex = notes.findIndex(note => note.id === selectedNote);\n    updatedNot[noteIndex] = {\n      id: selectedNote,\n      title: title,\n      content: content,\n    };\n\n    saveToLocalStorage('notes', updatedNot); //هنا\n    setNotes(updatedNot);\n    setEditing(false);\n    setTitle('');\n    setContent('');\n  };\n\n  const addNoteHandler = () => {\n    setCreating(true);\n    setEditing(false);\n    setTitle('');\n    setContent('');\n  };\n\n  const deleteNoteHandler = () => {\n    const updatedNots = [...notes];\n    const notIndex = updatedNots.findIndex(note => note.id === selectedNote);\n    notes.splice(notIndex, 1);\n    saveToLocalStorage('notes', notes); //هنا\n    setNotes(notes);\n    setSelectedNote(null);\n  };\n\n  const getAddNote = () => {\n    return (\n      <NoteForm\n        formTitle='ملاحظة جديدة'\n        title={title}\n        content={content}\n        titleChanged={changeTitleHandler}\n        contentChanged={changeContentHandler}\n        submitText='حفظ'\n        submitClicked={saveNoteHandler}\n      />\n    );\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <Message title='لا توجد ملاحظة' />;\n    }\n\n    if (!selectedNote) {\n      return <Message title='الرجاء اختيار ملاحظة' />;\n    }\n\n    const note = notes.find(note => {\n      return note.id === selectedNote;\n    });\n\n    let noteDisplay = (\n      <div>\n        <h2>{note.title}</h2>\n        <p>{note.content}</p>\n      </div>\n    );\n\n    if (editing) {\n      noteDisplay = (\n        <NoteForm\n          formTitle='تعديل ملاحظة'\n          title={title}\n          content={content}\n          titleChanged={changeTitleHandler}\n          contentChanged={changeContentHandler}\n          submitText='تعديل'\n          submitClicked={updatedNoteHandler}\n        />\n      );\n    }\n\n    return (\n      <div>\n        {!editing && (\n          <div className='note-operations'>\n            <a href='#' onClick={editNoteHandler}>\n              <i className='fa fa-pencil-alt' />\n            </a>\n            <a href='#' onClick={deleteNoteHandler}>\n              <i className='fa fa-trash' />\n            </a>\n          </div>\n        )}\n        {noteDisplay}\n      </div>\n    );\n  };\n\n  return (\n    <div className='App'>\n      <NotesContainer>\n        <NotesList>\n          {notes.map(note => (\n            <Note\n              key={note.id}\n              title={note.title}\n              noteClicked={() => selectNoteHandler(note.id)}\n              active={selectedNote === note.id}\n            />\n          ))}\n        </NotesList>\n        <button className='add-btn' onClick={addNoteHandler}>\n          +\n        </button>\n      </NotesContainer>\n      <Preview>\n        {creating ? getAddNote() : getPreview()}\n        </Preview>\n        {validationErrors.length !== 0 && <Alert validationMessages ={validationErrors} />}\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}